// Generated by CoffeeScript 1.8.0
(function() {
  'use strict';
  var Dict, LocalStrategy, Manager, log4js, logger;

  Manager = require('../models').Manager;

  Dict = require('../models').Dict;

  LocalStrategy = require('passport-local').Strategy;

  log4js = require('log4js');

  logger = log4js.getLogger('Auth');

  exports.config = function(settings) {};

  exports.localStrategy = function() {
    return new LocalStrategy(function(username, password, done) {
      return Manager.getAuthenticated(username, password, function(err, user, reason) {
        if (err) {
          logger.error(err);
        }
        if (!user) {
          logger.warn('Login Failed:' + username + '-' + password + '-' + reason);
          return done(err, false, {
            message: reason
          });
        } else {
          logger.trace('Loged in:' + username);
        }
        if (user.role && !user.functions) {
          return Dict.findOne({
            key: user.role
          }, function(err, result) {
            if (result && result.list) {
              user.functions = result.list;
              return user.save(function(err, result) {
                if (err) {
                  return done('登录失败', null);
                } else {
                  return done(null, user);
                }
              });
            } else {
              return done(null, user);
            }
          });
        } else {
          return done(null, user);
        }
      });
    });
  };

  exports.isAuthenticated = function(role) {
    return function(req, res, next) {
      if (!req.isAuthenticated()) {
        req.session.goingTo = req.originalUrl;
        return res.redirect('/');
      } else {
        if (role && req.user.role !== role) {
          res.status(401);
          return res.render('errors/401');
        } else {
          return next();
        }
      }
    };
  };

  exports.serialize = function(user, done) {
    return done(null, user.id);
  };

  exports.deserialize = function(id, done) {
    return Manager.findById(id, function(err, result) {
      return done(null, result);
    });
  };

  exports.injectUser = function() {
    return function(req, res, next) {
      var user;
      if (req.isAuthenticated()) {
        user = req.user;
        res.locals.user = user;
      }
      return next();
    };
  };

}).call(this);
