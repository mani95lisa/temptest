// Generated by CoffeeScript 1.8.0
(function() {
  'use strict';
  define(['console', 'humane', 'moment'], function(console, humane, moment) {
    return function($scope, $http, uiGridConstants, $modal, $interval, $location) {
      var add, addProduct, caching, handler;
      console.group('lottery');
      $scope.page = 1;
      $scope.search = function() {
        $scope.page = 1;
        return $scope.getData();
      };
      $scope.pageSize = 10;
      $scope.pages = [10, 25, 50, 100];
      add = '新增';
      $scope.functions = [add];
      $scope.run = function(value) {
        if (value === add) {
          return addProduct();
        }
      };
      addProduct = function() {
        var modalInstance;
        modalInstance = $modal.open({
          templateUrl: 'modals/lottery.html',
          controller: 'EditLottery',
          backdrop: 'static',
          resolve: {
            data: function() {
              return '';
            }
          }
        });
        return modalInstance.result.then(function(data) {
          data._csrf = csrf;
          if (data._id) {
            return $http.post('/lottery/update', data).success(function(result) {
              if (result.err) {
                return humane.error(result.err);
              } else {
                humane.log('更新成功');
                console.log(result);
                return $scope.getData();
              }
            }, function() {
              return console.log('dismiss');
            });
          } else {
            return $http.post('/lottery/add', data).success(function(result) {
              if (result.err) {
                return humane.log(result.err);
              } else {
                humane.log('新增成功');
                console.log(result);
                return $scope.getData();
              }
            }, function() {
              return console.log('dismiss');
            });
          }
        });
      };
      $scope.footer = 'partials/grid/grid_footer.html';
      $scope.header = 'partials/grid/grid_header.html';
      $scope.$watch('pageSize', function(n) {
        return $scope.getData();
      });
      $scope.$watch('page', function(n) {
        return $scope.getData();
      });
      caching = [];
      $scope.requesting = false;
      $scope.externalScopes = {
        edit: function(row) {
          var modalInstance;
          modalInstance = $modal.open({
            templateUrl: 'modals/lottery.html',
            controller: 'EditLottery',
            backdrop: 'static',
            resolve: {
              data: function() {
                return row.entity;
              }
            }
          });
          return modalInstance.result.then(function(data) {
            data._csrf = csrf;
            return $http.post('/lottery/update', data).success(function(result) {
              if (result.err) {
                return humane.error(result.err);
              } else {
                humane.log('更新成功');
                console.log(result);
                return $scope.getData();
              }
            });
          }, function() {
            return console.log('dismiss');
          });
        },
        enable: function(row) {
          var data;
          data = row.entity;
          data.enabled = !data.enabled;
          console.log(data.enabled);
          data._csrf = csrf;
          return $http.post('/lottery/update', data).success(function(result) {
            if (result.err) {
              return humane.error(result.err);
            } else {
              humane.log('更新成功');
              console.log(result);
              return $scope.getData();
            }
          });
        },
        style: function(row) {
          if (row.entity.enabled) {
            return 'btn btn-warn btn-flat btn-sm';
          } else {
            return 'btn btn-success btn-flat btn-sm';
          }
        },
        label: function(row) {
          if (row.entity.enabled) {
            return '禁用';
          } else {
            return '启用';
          }
        }
      };
      handler = '<div style="text-align: left"><div class="btn-group" ng-disabled="getExternalScopes().requesting"> <button ng-click="getExternalScopes().edit(row)" class="btn btn-default btn-flat btn-sm">编辑</button> <button ng-click="getExternalScopes().enable(row)" ng-class="getExternalScopes().style(row)">{{ getExternalScopes().label(row) }}</button> </div></div>';
      $scope.gridOptions = {
        enableSorting: false,
        columnDefs: [
          {
            name: '活动名称',
            field: 'name',
            enableSorting: false
          }, {
            name: '开始时间',
            field: 'begin',
            width: 100,
            enableSorting: false
          }, {
            name: '截止时间',
            field: 'end',
            width: 100,
            enableSorting: false
          }, {
            name: '参与人数',
            field: 'joined',
            width: 100,
            enableSorting: false
          }, {
            name: '创建时间',
            field: 'created_at',
            width: 200,
            enableSorting: false
          }, {
            name: '操作',
            field: 'created_at',
            width: 120,
            enableSorting: false,
            cellTemplate: handler
          }
        ]
      };
      $scope.getData = function() {
        if ($scope.requesting) {
          return;
        }
        $scope.requesting = true;
        return $http.get('/lottery/list', {
          params: {
            page: $scope.page,
            pageSize: $scope.pageSize,
            keywords: $scope.keywords
          }
        }).success(function(result) {
          console.group('lottery');
          console.log('GotProducts', result);
          console.groupEnd();
          $scope.requesting = false;
          if (result.err) {
            return humane.log(result.err);
          } else {
            $scope.count = result.count;
            if (result.result) {
              result.result.forEach(function(r) {
                r.begin = moment(r.begin).format('YYYY-MM-DD HH:mm:ss');
                r.end = moment(r.end).format('YYYY-MM-DD HH:mm:ss');
                return r.created_at = moment(r.created_at).format('YYYY-MM-DD HH:mm:ss');
              });
            }
            return $scope.gridOptions.data = result.result;
          }
        }).error(function(err) {
          $scope.requesting = false;
          if (err) {
            return humane.log(err);
          }
        });
      };
      $scope.getData();
      return console.groupEnd();
    };
  });

}).call(this);
