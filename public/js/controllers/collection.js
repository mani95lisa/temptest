// Generated by CoffeeScript 1.8.0
(function() {
  'use strict';
  define(['console', 'humane', 'moment'], function(console, humane, moment) {
    return function($scope, $http, uiGridConstants, $modal, $interval, $location, collectionService) {
      var caching, handler;
      console.group('collection');
      $scope.page = 1;
      $scope.search = function() {
        $scope.page = 1;
        return $scope.getData();
      };
      $scope.pageSize = 10;
      $scope.pages = [10, 25, 50, 100];
      $scope.filters = ['所有', '缓存失败', '已缓存完毕'];
      $scope.filter = {
        value: '所有'
      };
      $scope.footer = 'partials/grid/grid_footer.html';
      $scope.header = 'partials/grid/grid_header.html';
      $scope.$watch('pageSize', function(n) {
        if ($scope.gridApi) {
          $('#grid1').height(n * 35);
          $scope.gridApi.grid.refresh();
        }
        return $scope.getData();
      });
      $scope.$watch('page', function(n) {
        return $scope.getData();
      });
      $scope.$watch('filter.value', function(n) {
        return $scope.getData();
      });
      caching = [];
      $interval(function() {
        if ($location.path() === '/collection') {
          return $scope.getData();
        }
      }, 60000);
      $scope.requesting = false;
      $scope.externalScopes = {
        edit: function(row) {
          var modalInstance;
          modalInstance = $modal.open({
            templateUrl: 'modals/edit_collection.html',
            controller: 'EditCollection',
            backdrop: 'static',
            resolve: {
              data: function() {
                return row.entity;
              }
            }
          });
          return modalInstance.result.then(function(data) {
            return $http.post('/m/collection/update', data).success(function(result) {
              if (result.err) {
                humane.error(result.err);
                return $scope.getData();
              } else {
                humane.log('更新成功');
                return console.log(result);
              }
            });
          }, function() {
            return console.log('dismiss');
          });
        },
        cache: function(row) {
          if ($scope.requesting) {
            return;
          }
          $scope.requesting = true;
          if (caching.indexOf(row.entity) === -1 || row.entity.cache_status === '缓存失败') {
            return $http.get('/m/cache', {
              params: {
                id: row.entity._id
              }
            }).success(function(result) {
              if (result.err) {
                humane.log(err);
              } else {
                if (!result.finished) {
                  row.entity.cache_status = '开始缓存';
                  caching.push(row.entity);
                  humane.log('开始缓存');
                } else {
                  humane.log('已缓存成功');
                }
              }
              return $scope.requesting = false;
            }).error(function(err) {
              if (err) {
                humane.log(err);
              }
              return $scope.requesting = false;
            });
          }
        },
        check: function(row) {
          var content;
          content = JSON.stringify(row.entity);
          collectionService.setCheck(row.entity);
          return $location.path('collection/check');
        },
        cacheLabel: function(row) {
          return '缓存';
        },
        style: function(row) {
          if (row.enabled) {
            return 'btn btn-warn btn-flat btn-sm';
          } else {
            return 'btn btn-success btn-flat btn-sm';
          }
        },
        label: function(row) {
          if (row.enabled) {
            return '禁用';
          } else {
            return '启用';
          }
        }
      };
      handler = '<div style="text-align: left"><div class="btn-group" ng-disabled="getExternalScopes().requesting"> <button ng-click="getExternalScopes().edit(row)" class="btn btn-default btn-flat btn-sm">编辑</button> <button ng-click="getExternalScopes().cache(row)" class="btn btn-default btn-flat btn-sm">{{ getExternalScopes().cacheLabel(row) }}</button> <button ng-click="getExternalScopes().check(row)" class="btn btn-default btn-flat btn-sm">检查</button> <button ng-class="getExternalScopes().style(row)">{{ getExternalScopes().label(row) }}</button> </div></div>';
      $scope.gridOptions = {
        enableSorting: false,
        columnDefs: [
          {
            name: '名称',
            field: 'name',
            enableSorting: false
          }, {
            name: '绎者',
            field: 'author_name',
            width: 88,
            enableSorting: false
          }, {
            name: '大小',
            field: 'size',
            width: 99,
            enableSorting: false
          }, {
            name: '时长',
            field: 'duration',
            width: 99,
            enableSorting: false
          }, {
            name: '总长',
            field: 'length',
            width: 88,
            enableSorting: false
          }, {
            name: '已存',
            field: 'cached',
            width: 88,
            enableSorting: false
          }, {
            name: '状态',
            field: 'cache_status',
            width: 88,
            enableSorting: false
          }, {
            name: '操作',
            field: 'created_at',
            width: 200,
            enableSorting: false,
            cellTemplate: handler
          }
        ],
        onRegisterApi: function(gridApi) {
          return $scope.gridApi = gridApi;
        }
      };
      $scope.getData = function() {
        var filter;
        if ($scope.requesting) {
          return;
        }
        $scope.requesting = true;
        filter = $scope.filter.value === '所有' ? '' : $scope.filter.value;
        return $http.get('/m/collections', {
          params: {
            page: $scope.page,
            pageSize: $scope.pageSize,
            keywords: $scope.keywords,
            filter: filter
          }
        }).success(function(result) {
          console.group('collection');
          console.log('GotCollections', result);
          console.groupEnd();
          $scope.requesting = false;
          if (result.err) {
            return humane.log(result.err);
          } else {
            $scope.count = result.count;
            if (result.result) {
              result.result.forEach(function(r) {
                r.size = bytesToSize(r.size);
                if (r.duration) {
                  r.duration = getTime(r.duration);
                }
                return r.created_at = moment(r.creatd_at).format('YYYY-MM-DD');
              });
            }
            return $scope.gridOptions.data = result.result;
          }
        }).error(function(err) {
          $scope.requesting = false;
          if (err) {
            return humane.log(err);
          }
        });
      };
      $scope.getData();
      return console.groupEnd();
    };
  });

}).call(this);
