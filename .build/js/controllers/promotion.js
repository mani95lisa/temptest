// Generated by CoffeeScript 1.8.0
(function() {
  'use strict';
  define(['console', 'humane', 'moment'], function(console, humane, moment) {
    return function($scope, $http, $q, $filter, uiGridConstants, $modal, $interval, $location) {
      var getTags, products, updateResult, updateTags;
      console.group('promotion');
      getTags = function(key, callback, subKey, valuePro) {
        getDict($http, key, function(result) {
          if (subKey) {
            if (result && valuePro) {
              $scope[subKey][key] = result[valuePro];
            } else {
              $scope[subKey][key] = result;
            }
          } else {
            if (key === 'PMTimes' && (!result || !result.list.length)) {
              result = {
                list: [
                  {
                    start: '',
                    end: ''
                  }
                ]
              };
            } else if (key === 'PMProducts' && !result) {
              result = {
                list: []
              };
            }
            $scope[key] = result;
          }
          if (result && callback) {
            return callback(result);
          }
        });
      };
      updateTags = function(key, list, callback, isPro) {
        var arr, data, normal;
        if (isPro) {
          data = {
            key: key,
            list: list
          };
        } else {
          data = list;
        }
        data.key = key;
        arr = [];
        normal = false;
        data.list.forEach(function(text) {
          if (text.text) {
            normal = true;
            return arr.push(text.text);
          } else {

          }
        });
        if (normal) {
          data.list = arr;
        }
        $scope.handling = true;
        console.log(data);
        $http.post('/dict/update/list', data).success(function(result) {
          $scope.handling = false;
          if (!result.err) {
            callback(true);
            return humane.log('保存成功');
          } else {
            return humane.log(result.err);
          }
        });
      };
      updateResult = function(result) {
        if (result.err) {
          return humane.log(result.err);
        }
      };
      $scope.tagAdded = function(key) {
        return updateTags(key, $scope[key], updateResult);
      };
      $scope.tagRemoved = function(key) {
        return updateTags(key, $scope[key], updateResult);
      };
      $scope.productRemove = function(pro) {
        var arr;
        console.log(pro);
        arr = $scope.PMProducts.list;
        return arr.forEach(function(p) {
          if (p.name === pro.text) {
            arr.splice(arr.indexOf(p), 1);
          }
        });
      };
      $scope.productAdded = function(pro) {
        console.log(pro);
        return products.forEach(function(p) {
          var pinfo;
          if (p.name === pro.text) {
            pinfo = [];
            p.prices.forEach(function(pc) {
              return pinfo.push(pc.label + '=' + pc.value);
            });
            p.price_info = pinfo.join(' ');
            $scope.PMProducts.list.push(p);
          }
        });
      };
      getTags('PMTimes');
      getTags('PMProducts');
      getTags('PMProductNames');
      $scope.addTime = function() {
        return $scope.PMTimes.list.push({
          start: '',
          end: ''
        });
      };
      products = [];
      $scope.loadTags = function(query) {
        var defer;
        defer = $q.defer();
        $http.get('/m/product/list', {
          params: {
            page: 1,
            pageSize: 10,
            keywords: query
          }
        }).success(function(result) {
          var arr;
          products = result.result;
          arr = [];
          if (products && products.length) {
            products.forEach(function(p) {
              if (p.name) {
                return arr.push(p.name);
              }
            });
          }
          return defer.resolve(arr);
        });
        return defer.promise;
      };
      $scope.getPrices = function(prices) {
        var arr;
        arr = [];
        if (prices) {
          prices.forEach(function(p) {
            return arr.push(p.label + '=' + p.value);
          });
        }
        return arr.join(' ');
      };
      $scope.save = function() {
        var productsOK, times, timesOK;
        times = $scope.PMTimes.list;
        timesOK = true;
        productsOK = true;
        if (times.length) {
          times.forEach(function(t) {
            if (!t.start || !t.end) {
              return times.splice(times.indexOf(t), 1);
            } else if (!moment(t.start, 'HH:mm').isValid() || !moment(t.end, 'HH:mm').isValid()) {
              timesOK = false;
              humane.log('时段格式错误，应该是 08:00 或 14:00 这样的');
            }
          });
        } else {
          timesOK = false;
        }
        products = $scope.PMProducts.list;
        if (products.length) {
          products.forEach(function(p) {
            var arr, prices;
            if (!p.price_info) {
              humane.log('价格标签不能为空');
            } else {
              arr = p.price_info.split(' ');
              prices = [];
              arr.forEach(function(pi) {
                var arr2;
                arr2 = pi.split('=');
                if (arr2.length !== 2 || !parseInt(arr2[1])) {
                  humane.log('价格标签格式错误');
                } else {
                  return prices.push({
                    label: arr2[0],
                    value: arr2[1]
                  });
                }
              });
              return p.prices = prices;
            }
          });
        } else {
          productsOK = false;
        }
        if (timesOK) {
          $scope.tagAdded('PMTimes');
        }
        if (productsOK) {
          $scope.tagAdded('PMProducts');
          return $scope.tagAdded('PMProductNames');
        }
      };
      return console.groupEnd();
    };
  });

}).call(this);
